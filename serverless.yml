service: madcampHttpApi

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-northeast-2
  environment:
    DB_HOST: env:DB_HOST
    DB_USER: env:DB_USER
    DB_PASSWORD: env:DB_PASSWORD
    DB_NAME: env:DB_NAME
    KAKAO_API_KEY: env:KAKAO_API_KEY
    KAKAO_REDIRECT_URI: env:KAKAO_REDIRECT_URI

  vpc:
    securityGroupIds:
      - sg-0bd76336ac022c789
    subnetIds:
      - subnet-001a15c2ef77a9373
      - subnet-02e6087dc234cade6
      - subnet-022aff2afd3d4b04c
      - subnet-0ba52e4d4989dc7cd
      - subnet-0f1711463d45b9403
      - subnet-0f4be7b9141369908
  iam:
    role: arn:aws:iam::730335448938:role/lambda-rds

functions:
  kakaoLogin:
    handler: src/login.kakao
    timeout: 10
    events:
      - httpApi:
          path: /oauth
          method: get
  getAllUsers:
    handler: src/user.getAllUsers
    timeout: 10
    events:
      - httpApi:
          path: /user
          method: get

  getUserById:
    handler: src/user.getUserById
    timeout: 10
    events:
      - httpApi:
          path: /user/{userId}
          method: get

  changeUserInfo:
    handler: src/user.changeUserInfo
    timeout: 10
    events:
      - httpApi:
          path: /user/{userId}
          method: put

  getAllOpenRooms:
    handler: src/room.getAllOpenRooms
    events:
      - httpApi:
          path: /room/open
          method: get

  createRoom:
    handler: src/room.createRoom
    events:
      - httpApi:
          path: /room
          method: post

  deleteRoom:
    handler: src/room.deleteRoom
    events:
      - httpApi:
          path: /room/{roomId}
          method: delete

  closeRoom:
    handler: src/room.closeRoom
    events:
      - httpApi:
          path: /room/{roomId}
          method: put

  enterRoom:
    handler: src/room.enterRoom
    events:
      - httpApi:
          path: /room/{roomId}/user
          method: post

  getAllUsersInRoom:
    handler: src/room.getAllUsersInRoom
    events:
      - httpApi:
          path: /room/{roomId}/user
          method: get

  updateScore:
    handler: src/room.updateScore
    events:
      - httpApi:
          path: /room/{roomId}/{userId}
          method: put

  deleteUserInRoom:
    handler: src/room.deleteUserInRoom
    events:
      - httpApi:
          path: /room/{roomId}/{userId}
          method: delete

  getRoomById:
    handler: src/room.getRoomById
    events:
      - httpApi:
          path: /room/{roomId}
          method: get

  # getReservedSongs:
  #   handler: src/roomSong.getReservedSongs
  #   events:
  #     - httpApi:
  #         path: /room/{roomId}/song
  #         method: get

  # addSongToRoom:
  #   handler: src/roomSong.addSongToRoom
  #   events:
  #     - httpApi:
  #         path: /room/{roomId}/song
  #         method: post

  # updateSongStatus:
  #   handler: src/roomSong.updateSongStatus
  #   events:
  #     - httpApi:
  #         path: /room/{roomId}/song/{songId}
  #         method: put

  # cancelReservation:
  #   handler: src/roomSong.cancelReservation
  #   events:
  #     - httpApi:
  #         path: /room/{roomId}/song/{songId}
  #         method: delete

  getFollowers:
    handler: src/friends.getFollowers
    events:
      - httpApi:
          path: /friends/{userId}/follower
          method: get

  getFollowings:
    handler: src/friends.getFollowings
    events:
      - httpApi:
          path: /friends/{userId}/following
          method: get

  checkFollowing:
    handler: src/friends.checkFollowing
    events:
      - httpApi:
          path: /friends/{userId}/{targetUserId}
          method: get

  followUser:
    handler: src/friends.followUser
    events:
      - httpApi:
          path: /friends/{userId}/following
          method: post

  unfollowUser:
    handler: src/friends.unfollowUser
    events:
      - httpApi:
          path: /friends/{userId}/unfollow/{followingId}
          method: delete

  blockFollower:
    handler: src/friends.blockFollower
    events:
      - httpApi:
          path: /friends/{userId}/block/{followerId}
          method: delete

package:
  exclude:
    - node_modules/**
    - test/**
    - src/**/*.spec.ts
    - src/**/*.test.ts

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
