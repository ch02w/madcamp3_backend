{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "KakaoLoginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/madcamp31-dev-kakaoLogin"
      }
    },
    "GetAllUsersLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/madcamp31-dev-getAllUsers"
      }
    },
    "KakaoLoginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/madcamp31/dev/1720939262158-2024-07-14T06:41:02.158Z/madcamp31.zip"
        },
        "Handler": "src/login.kakao",
        "Runtime": "nodejs20.x",
        "FunctionName": "madcamp31-dev-kakaoLogin",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DB_HOST": "madcamp3.c5uqkm8isex8.ap-northeast-2.rds.amazonaws.com",
            "DB_USER": "admin",
            "DB_PASSWORD": "madcamp3",
            "DB_DATABASE": "madcamp3",
            "KAKAO_API_KEY": "f6cd63eaf3ea52e89ff8978fd1f187d4",
            "KAKAO_REDIRECT_URI": "https://rr0pvxzjmi.execute-api.ap-northeast-2.amazonaws.com/dev/oauth"
          }
        },
        "Role": "arn:aws:iam::730335448938:role/lambda-rds",
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0bd76336ac022c789"
          ],
          "SubnetIds": [
            "subnet-001a15c2ef77a9373",
            "subnet-02e6087dc234cade6",
            "subnet-022aff2afd3d4b04c",
            "subnet-0ba52e4d4989dc7cd",
            "subnet-0f1711463d45b9403",
            "subnet-0f4be7b9141369908"
          ]
        }
      },
      "DependsOn": [
        "KakaoLoginLogGroup"
      ]
    },
    "GetAllUsersLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/madcamp31/dev/1720939262158-2024-07-14T06:41:02.158Z/madcamp31.zip"
        },
        "Handler": "src/user.getAllUsers",
        "Runtime": "nodejs20.x",
        "FunctionName": "madcamp31-dev-getAllUsers",
        "MemorySize": 1024,
        "Timeout": 10,
        "Environment": {
          "Variables": {
            "DB_HOST": "madcamp3.c5uqkm8isex8.ap-northeast-2.rds.amazonaws.com",
            "DB_USER": "admin",
            "DB_PASSWORD": "madcamp3",
            "DB_DATABASE": "madcamp3",
            "KAKAO_API_KEY": "f6cd63eaf3ea52e89ff8978fd1f187d4",
            "KAKAO_REDIRECT_URI": "https://rr0pvxzjmi.execute-api.ap-northeast-2.amazonaws.com/dev/oauth"
          }
        },
        "Role": "arn:aws:iam::730335448938:role/lambda-rds",
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0bd76336ac022c789"
          ],
          "SubnetIds": [
            "subnet-001a15c2ef77a9373",
            "subnet-02e6087dc234cade6",
            "subnet-022aff2afd3d4b04c",
            "subnet-0ba52e4d4989dc7cd",
            "subnet-0f1711463d45b9403",
            "subnet-0f4be7b9141369908"
          ]
        }
      },
      "DependsOn": [
        "GetAllUsersLogGroup"
      ]
    },
    "KakaoLoginLambdaVersionZ6ZrYMbek3dD7SyA9Mt2qhnmxBP6zrv1gagTuc9Mq0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "KakaoLoginLambdaFunction"
        },
        "CodeSha256": "wDexNk061yvl9ZaUjo8ghKgHbQjNrUD/zT7zM1FJ0lI="
      }
    },
    "GetAllUsersLambdaVersionvYyXBBt7oXBfHG3QtnPSvRDehtSLD16RlvWtGApZu8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllUsersLambdaFunction"
        },
        "CodeSha256": "wDexNk061yvl9ZaUjo8ghKgHbQjNrUD/zT7zM1FJ0lI="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-madcamp31",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceOauth": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "oauth",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceUser": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "user",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodOauthGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceOauth"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "KakaoLoginLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "KakaoLoginLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodUserGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceUser"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetAllUsersLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetAllUsersLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1720939252723": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodOauthGet",
        "ApiGatewayMethodUserGet"
      ]
    },
    "KakaoLoginLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "KakaoLoginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetAllUsersLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetAllUsersLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-madcamp31-dev-ServerlessDeploymentBucketName"
      }
    },
    "KakaoLoginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "KakaoLoginLambdaVersionZ6ZrYMbek3dD7SyA9Mt2qhnmxBP6zrv1gagTuc9Mq0"
      },
      "Export": {
        "Name": "sls-madcamp31-dev-KakaoLoginLambdaFunctionQualifiedArn"
      }
    },
    "GetAllUsersLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetAllUsersLambdaVersionvYyXBBt7oXBfHG3QtnPSvRDehtSLD16RlvWtGApZu8"
      },
      "Export": {
        "Name": "sls-madcamp31-dev-GetAllUsersLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-madcamp31-dev-ServiceEndpoint"
      }
    }
  }
}